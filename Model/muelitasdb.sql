-- MySQL Script generated by MySQL Workbench
-- Mon Aug  6 23:08:03 2018
-- Model: muelitasDB EER model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema muelitasDb
-- -----------------------------------------------------
DROP SCHEMA IF EXISTS `muelitasDb` ;

-- -----------------------------------------------------
-- Schema muelitasDb
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `muelitasDb` DEFAULT CHARACTER SET utf8 ;
SHOW WARNINGS;
USE `muelitasDb` ;

-- -----------------------------------------------------
-- Table `type`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `type` ;

SHOW WARNINGS;
CREATE TABLE IF NOT EXISTS `type` (
  `type_id` INT NOT NULL AUTO_INCREMENT,
  `type_desc` VARCHAR(45) NOT NULL,
  `type_parent` VARCHAR(2) NOT NULL,
  PRIMARY KEY (`type_id`))
ENGINE = InnoDB;

SHOW WARNINGS;
CREATE UNIQUE INDEX `type_id_UNIQUE` ON `type` (`type_id` ASC);

SHOW WARNINGS;

-- -----------------------------------------------------
-- Table `person`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `person` ;

SHOW WARNINGS;
CREATE TABLE IF NOT EXISTS `person` (
  `person_id` INT NOT NULL AUTO_INCREMENT,
  `person_name` VARCHAR(45) NULL,
  `person_lastname` VARCHAR(45) NULL,
  `person_address` VARCHAR(200) NULL,
  `person_zipcode` VARCHAR(30) NULL,
  `person_borndate` DATE NULL,
  `person_phone` VARCHAR(20) NULL,
  `person_cellphone` VARCHAR(20) NULL,
  `person_email` VARCHAR(100) NULL,
  `persontype_id` INT NULL COMMENT 'Patient or Doctor or Staff',
  PRIMARY KEY (`person_id`))
ENGINE = InnoDB;

SHOW WARNINGS;
CREATE UNIQUE INDEX `person_id_UNIQUE` ON `person` (`person_id` ASC);

SHOW WARNINGS;

-- -----------------------------------------------------
-- Table `user`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `user` ;

SHOW WARNINGS;
CREATE TABLE IF NOT EXISTS `user` (
  `user_id` VARCHAR(20) NOT NULL,
  `user_password` VARCHAR(20) NULL,
  `user_name` VARCHAR(45) NULL,
  `user_lastname` VARCHAR(45) NULL,
  `user_email` VARCHAR(45) NULL,
  `person_id` INT NOT NULL,
  `role_id` INT NOT NULL,
  PRIMARY KEY (`user_id`))
ENGINE = InnoDB;

SHOW WARNINGS;
CREATE UNIQUE INDEX `user_id_UNIQUE` ON `user` (`user_id` ASC);

SHOW WARNINGS;

-- -----------------------------------------------------
-- Table `doctor_schedule_off`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `doctor_schedule_off` ;

SHOW WARNINGS;
CREATE TABLE IF NOT EXISTS `doctor_schedule_off` (
  `docscheoff_id` INT NOT NULL AUTO_INCREMENT,
  `docscheoff_date` DATE NULL,
  `docscheoff_begin` DATETIME NULL,
  `docscheoff_end` DATETIME NULL,
  `docschedoff_allday` INT UNSIGNED NOT NULL COMMENT '1 all day\n0 period of time',
  `doctor_id` INT NOT NULL,
  PRIMARY KEY (`docscheoff_id`))
ENGINE = InnoDB;

SHOW WARNINGS;
CREATE UNIQUE INDEX `schedule_id_UNIQUE` ON `doctor_schedule_off` (`docscheoff_id` ASC);

SHOW WARNINGS;

-- -----------------------------------------------------
-- Table `appointment`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `appointment` ;

SHOW WARNINGS;
CREATE TABLE IF NOT EXISTS `appointment` (
  `appointment_id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `appointment_date` DATETIME NOT NULL,
  `doctor_id` INT NOT NULL,
  `patient_id` INT NOT NULL,
  `speciality_id` INT NOT NULL,
  `status_id` INT NOT NULL,
  `appointment_duration` INT NOT NULL,
  PRIMARY KEY (`appointment_id`))
ENGINE = InnoDB;

SHOW WARNINGS;
CREATE UNIQUE INDEX `appointment_id_UNIQUE` ON `appointment` (`appointment_id` ASC);

SHOW WARNINGS;

-- -----------------------------------------------------
-- Table `patient`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `patient` ;

SHOW WARNINGS;
CREATE TABLE IF NOT EXISTS `patient` (
  `patient_id` INT NOT NULL,
  `patient_healthNumber` VARCHAR(45) NULL,
  `patient_emergencyContactName` VARCHAR(200) NULL,
  `patient_emergencyContactPhone` VARCHAR(45) NULL,
  `ocupation_id` INT NOT NULL,
  PRIMARY KEY (`patient_id`))
ENGINE = InnoDB;

SHOW WARNINGS;

-- -----------------------------------------------------
-- Table `day_off`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `day_off` ;

SHOW WARNINGS;
CREATE TABLE IF NOT EXISTS `day_off` (
  `dayoff_id` DATE NOT NULL,
  `dayoff_desc` VARCHAR(45) NULL,
  PRIMARY KEY (`dayoff_id`))
ENGINE = InnoDB;

SHOW WARNINGS;

-- -----------------------------------------------------
-- Table `doctor_schedule`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `doctor_schedule` ;

SHOW WARNINGS;
CREATE TABLE IF NOT EXISTS `doctor_schedule` (
  `docsche_id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `docsche_day` VARCHAR(10) NOT NULL,
  `docsche_time_ini` DATETIME NOT NULL,
  `docsche_time_end` DATETIME NOT NULL,
  `docsche_duration` INT NOT NULL COMMENT 'minutes by date',
  `docsche_price` DOUBLE NOT NULL,
  `docsche_dini` DATE NOT NULL,
  `docsche_dend` DATE NULL,
  `doctor_id` INT NOT NULL,
  `speciality_id` INT NOT NULL,
  PRIMARY KEY (`docsche_id`, `speciality_id`))
ENGINE = InnoDB;

SHOW WARNINGS;
CREATE UNIQUE INDEX `docsche_id_UNIQUE` ON `doctor_schedule` (`docsche_id` ASC);

SHOW WARNINGS;

-- -----------------------------------------------------
-- Table `appointment_log`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `appointment_log` ;

SHOW WARNINGS;
CREATE TABLE IF NOT EXISTS `appointment_log` (
  `applog_id` INT NOT NULL AUTO_INCREMENT,
  `appointment_id` INT UNSIGNED NOT NULL,
  `user_id` VARCHAR(20) NOT NULL,
  `applog_datetime` DATETIME NULL,
  `status_id` INT NOT NULL,
  PRIMARY KEY (`applog_id`))
ENGINE = InnoDB;

SHOW WARNINGS;
CREATE UNIQUE INDEX `applog_id_UNIQUE` ON `appointment_log` (`applog_id` ASC);

SHOW WARNINGS;

SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
